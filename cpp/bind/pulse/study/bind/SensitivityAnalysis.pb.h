// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pulse/study/bind/SensitivityAnalysis.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "pulse/cdm/bind/Actions.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto;
namespace pulse {
namespace study {
namespace bind {
namespace sensitivity_analysis {
class SimulationData;
class SimulationDataDefaultTypeInternal;
extern SimulationDataDefaultTypeInternal _SimulationData_default_instance_;
class SimulationListData;
class SimulationListDataDefaultTypeInternal;
extern SimulationListDataDefaultTypeInternal _SimulationListData_default_instance_;
}  // namespace sensitivity_analysis
}  // namespace bind
}  // namespace study
}  // namespace pulse
PROTOBUF_NAMESPACE_OPEN
template<> ::pulse::study::bind::sensitivity_analysis::SimulationData* Arena::CreateMaybeMessage<::pulse::study::bind::sensitivity_analysis::SimulationData>(Arena*);
template<> ::pulse::study::bind::sensitivity_analysis::SimulationListData* Arena::CreateMaybeMessage<::pulse::study::bind::sensitivity_analysis::SimulationListData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pulse {
namespace study {
namespace bind {
namespace sensitivity_analysis {

// ===================================================================

class SimulationData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pulse.study.bind.sensitivity_analysis.SimulationData) */ {
 public:
  inline SimulationData() : SimulationData(nullptr) {}
  virtual ~SimulationData();

  SimulationData(const SimulationData& from);
  SimulationData(SimulationData&& from) noexcept
    : SimulationData() {
    *this = ::std::move(from);
  }

  inline SimulationData& operator=(const SimulationData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulationData& operator=(SimulationData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulationData& default_instance();

  static inline const SimulationData* internal_default_instance() {
    return reinterpret_cast<const SimulationData*>(
               &_SimulationData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SimulationData& a, SimulationData& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulationData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulationData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulationData* New() const final {
    return CreateMaybeMessage<SimulationData>(nullptr);
  }

  SimulationData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulationData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SimulationData& from);
  void MergeFrom(const SimulationData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulationData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pulse.study.bind.sensitivity_analysis.SimulationData";
  }
  protected:
  explicit SimulationData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto);
    return ::descriptor_table_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kOverridesFieldNumber = 3,
    kMeanAortaInFlowMLPerSFieldNumber = 4,
    kMeanArterialOxygenPartialPressureMmHgFieldNumber = 5,
    kMeanBoneVasculatureInFlowMLPerSFieldNumber = 6,
    kMeanBrainVasculatureInFlowMLPerSFieldNumber = 7,
    kMeanFatVasculatureInFlowMLPerSFieldNumber = 8,
    kMeanKidneyVasculatureInFlowMLPerSFieldNumber = 9,
    kMeanLargeIntestineVasculatureInFlowMLPerSFieldNumber = 10,
    kMeanLeftArmVasculatureInFlowMLPerSFieldNumber = 11,
    kMeanLeftHeartInFlowMLPerSFieldNumber = 12,
    kMeanLeftHeartPressureMmHgFieldNumber = 13,
    kMeanLeftKidneyVasculatureInFlowMLPerSFieldNumber = 14,
    kMeanLeftLegVasculatureInFlowMLPerSFieldNumber = 15,
    kMeanLeftPulmonaryArteriesInFlowMLPerSFieldNumber = 16,
    kMeanLeftPulmonaryCapillariesInFlowMLPerSFieldNumber = 17,
    kMeanLeftPulmonaryVeinsInFlowMLPerSFieldNumber = 18,
    kMeanLiverVasculatureInFlowMLPerSFieldNumber = 19,
    kMeanMuscleVasculatureInFlowMLPerSFieldNumber = 20,
    kMeanMyocardiumVasculatureInFlowMLPerSFieldNumber = 21,
    kMeanPulmonaryArteriesInFlowMLPerSFieldNumber = 22,
    kMeanPulmonaryCapillariesInFlowMLPerSFieldNumber = 23,
    kMeanPulmonaryCapillariesPressureMmHgFieldNumber = 24,
    kMeanPulmonaryVeinsInFlowMLPerSFieldNumber = 25,
    kMeanPulmonaryVeinsPressureMmHgFieldNumber = 26,
    kMeanRightArmVasculatureInFlowMLPerSFieldNumber = 27,
    kMeanRightHeartInFlowMLPerSFieldNumber = 28,
    kIDFieldNumber = 1,
    kAchievedStabilizationFieldNumber = 56,
    kMeanRightHeartPressureMmHgFieldNumber = 29,
    kMeanRightKidneyVasculatureInFlowMLPerSFieldNumber = 30,
    kMeanRightLegVasculatureInFlowMLPerSFieldNumber = 31,
    kMeanRightPulmonaryArteriesInFlowMLPerSFieldNumber = 32,
    kMeanRightPulmonaryCapillariesInFlowMLPerSFieldNumber = 33,
    kMeanRightPulmonaryVeinsInFlowMLPerSFieldNumber = 34,
    kMeanSkinVasculatureInFlowMLPerSFieldNumber = 35,
    kMeanSmallIntestineVasculatureInFlowMLPerSFieldNumber = 36,
    kMeanSplanchnicVasculatureInFlowMLPerSFieldNumber = 37,
    kMeanSpleenVasculatureInFlowMLPerSFieldNumber = 38,
    kMeanVenaCavaInFlowMLPerSFieldNumber = 39,
    kMeanVenousCarbonDioxidePartialPressureMmHgFieldNumber = 40,
    kMeanVenousOxygenPartialPressureMmHgFieldNumber = 41,
    kBloodVolumeMLFieldNumber = 42,
    kCardiacOutputMLPerMinFieldNumber = 43,
    kDiastolicArterialPressureMmHgFieldNumber = 44,
    kHeartEjectionFractionFieldNumber = 45,
    kHeartStrokeVolumeMLFieldNumber = 46,
    kMeanArterialCarbonDioxidePartialPressureMmHgFieldNumber = 47,
    kMeanArterialPressureMmHgFieldNumber = 48,
    kMeanCentralVenousPressureMmHgFieldNumber = 49,
    kPulmonaryDiastolicArterialPressureMmHgFieldNumber = 50,
    kPulmonaryMeanArterialPressureMmHgFieldNumber = 51,
    kPulmonaryMeanCapillaryFlowMLPerSFieldNumber = 52,
    kPulmonarySystolicArterialPressureMmHgFieldNumber = 53,
    kSystolicArterialPressureMmHgFieldNumber = 54,
    kSystemicVascularResistanceMmHgSPerLFieldNumber = 55,
    kStabilizationTimeSFieldNumber = 57,
    kTotalSimulationTimeSFieldNumber = 58,
  };
  // string Name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .pulse.cdm.bind.OverridesData Overrides = 3;
  bool has_overrides() const;
  private:
  bool _internal_has_overrides() const;
  public:
  void clear_overrides();
  const ::pulse::cdm::bind::OverridesData& overrides() const;
  ::pulse::cdm::bind::OverridesData* release_overrides();
  ::pulse::cdm::bind::OverridesData* mutable_overrides();
  void set_allocated_overrides(::pulse::cdm::bind::OverridesData* overrides);
  private:
  const ::pulse::cdm::bind::OverridesData& _internal_overrides() const;
  ::pulse::cdm::bind::OverridesData* _internal_mutable_overrides();
  public:
  void unsafe_arena_set_allocated_overrides(
      ::pulse::cdm::bind::OverridesData* overrides);
  ::pulse::cdm::bind::OverridesData* unsafe_arena_release_overrides();

  // double MeanAortaInFlow_mL_Per_s = 4;
  void clear_meanaortainflow_ml_per_s();
  double meanaortainflow_ml_per_s() const;
  void set_meanaortainflow_ml_per_s(double value);
  private:
  double _internal_meanaortainflow_ml_per_s() const;
  void _internal_set_meanaortainflow_ml_per_s(double value);
  public:

  // double MeanArterialOxygenPartialPressure_mmHg = 5;
  void clear_meanarterialoxygenpartialpressure_mmhg();
  double meanarterialoxygenpartialpressure_mmhg() const;
  void set_meanarterialoxygenpartialpressure_mmhg(double value);
  private:
  double _internal_meanarterialoxygenpartialpressure_mmhg() const;
  void _internal_set_meanarterialoxygenpartialpressure_mmhg(double value);
  public:

  // double MeanBoneVasculatureInFlow_mL_Per_s = 6;
  void clear_meanbonevasculatureinflow_ml_per_s();
  double meanbonevasculatureinflow_ml_per_s() const;
  void set_meanbonevasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanbonevasculatureinflow_ml_per_s() const;
  void _internal_set_meanbonevasculatureinflow_ml_per_s(double value);
  public:

  // double MeanBrainVasculatureInFlow_mL_Per_s = 7;
  void clear_meanbrainvasculatureinflow_ml_per_s();
  double meanbrainvasculatureinflow_ml_per_s() const;
  void set_meanbrainvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanbrainvasculatureinflow_ml_per_s() const;
  void _internal_set_meanbrainvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanFatVasculatureInFlow_mL_Per_s = 8;
  void clear_meanfatvasculatureinflow_ml_per_s();
  double meanfatvasculatureinflow_ml_per_s() const;
  void set_meanfatvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanfatvasculatureinflow_ml_per_s() const;
  void _internal_set_meanfatvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanKidneyVasculatureInFlow_mL_Per_s = 9;
  void clear_meankidneyvasculatureinflow_ml_per_s();
  double meankidneyvasculatureinflow_ml_per_s() const;
  void set_meankidneyvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meankidneyvasculatureinflow_ml_per_s() const;
  void _internal_set_meankidneyvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanLargeIntestineVasculatureInFlow_mL_Per_s = 10;
  void clear_meanlargeintestinevasculatureinflow_ml_per_s();
  double meanlargeintestinevasculatureinflow_ml_per_s() const;
  void set_meanlargeintestinevasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanlargeintestinevasculatureinflow_ml_per_s() const;
  void _internal_set_meanlargeintestinevasculatureinflow_ml_per_s(double value);
  public:

  // double MeanLeftArmVasculatureInFlow_mL_Per_s = 11;
  void clear_meanleftarmvasculatureinflow_ml_per_s();
  double meanleftarmvasculatureinflow_ml_per_s() const;
  void set_meanleftarmvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanleftarmvasculatureinflow_ml_per_s() const;
  void _internal_set_meanleftarmvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanLeftHeartInFlow_mL_Per_s = 12;
  void clear_meanleftheartinflow_ml_per_s();
  double meanleftheartinflow_ml_per_s() const;
  void set_meanleftheartinflow_ml_per_s(double value);
  private:
  double _internal_meanleftheartinflow_ml_per_s() const;
  void _internal_set_meanleftheartinflow_ml_per_s(double value);
  public:

  // double MeanLeftHeartPressure_mmHg = 13;
  void clear_meanleftheartpressure_mmhg();
  double meanleftheartpressure_mmhg() const;
  void set_meanleftheartpressure_mmhg(double value);
  private:
  double _internal_meanleftheartpressure_mmhg() const;
  void _internal_set_meanleftheartpressure_mmhg(double value);
  public:

  // double MeanLeftKidneyVasculatureInFlow_mL_Per_s = 14;
  void clear_meanleftkidneyvasculatureinflow_ml_per_s();
  double meanleftkidneyvasculatureinflow_ml_per_s() const;
  void set_meanleftkidneyvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanleftkidneyvasculatureinflow_ml_per_s() const;
  void _internal_set_meanleftkidneyvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanLeftLegVasculatureInFlow_mL_Per_s = 15;
  void clear_meanleftlegvasculatureinflow_ml_per_s();
  double meanleftlegvasculatureinflow_ml_per_s() const;
  void set_meanleftlegvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanleftlegvasculatureinflow_ml_per_s() const;
  void _internal_set_meanleftlegvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanLeftPulmonaryArteriesInFlow_mL_Per_s = 16;
  void clear_meanleftpulmonaryarteriesinflow_ml_per_s();
  double meanleftpulmonaryarteriesinflow_ml_per_s() const;
  void set_meanleftpulmonaryarteriesinflow_ml_per_s(double value);
  private:
  double _internal_meanleftpulmonaryarteriesinflow_ml_per_s() const;
  void _internal_set_meanleftpulmonaryarteriesinflow_ml_per_s(double value);
  public:

  // double MeanLeftPulmonaryCapillariesInFlow_mL_Per_s = 17;
  void clear_meanleftpulmonarycapillariesinflow_ml_per_s();
  double meanleftpulmonarycapillariesinflow_ml_per_s() const;
  void set_meanleftpulmonarycapillariesinflow_ml_per_s(double value);
  private:
  double _internal_meanleftpulmonarycapillariesinflow_ml_per_s() const;
  void _internal_set_meanleftpulmonarycapillariesinflow_ml_per_s(double value);
  public:

  // double MeanLeftPulmonaryVeinsInFlow_mL_Per_s = 18;
  void clear_meanleftpulmonaryveinsinflow_ml_per_s();
  double meanleftpulmonaryveinsinflow_ml_per_s() const;
  void set_meanleftpulmonaryveinsinflow_ml_per_s(double value);
  private:
  double _internal_meanleftpulmonaryveinsinflow_ml_per_s() const;
  void _internal_set_meanleftpulmonaryveinsinflow_ml_per_s(double value);
  public:

  // double MeanLiverVasculatureInFlow_mL_Per_s = 19;
  void clear_meanlivervasculatureinflow_ml_per_s();
  double meanlivervasculatureinflow_ml_per_s() const;
  void set_meanlivervasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanlivervasculatureinflow_ml_per_s() const;
  void _internal_set_meanlivervasculatureinflow_ml_per_s(double value);
  public:

  // double MeanMuscleVasculatureInFlow_mL_Per_s = 20;
  void clear_meanmusclevasculatureinflow_ml_per_s();
  double meanmusclevasculatureinflow_ml_per_s() const;
  void set_meanmusclevasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanmusclevasculatureinflow_ml_per_s() const;
  void _internal_set_meanmusclevasculatureinflow_ml_per_s(double value);
  public:

  // double MeanMyocardiumVasculatureInFlow_mL_Per_s = 21;
  void clear_meanmyocardiumvasculatureinflow_ml_per_s();
  double meanmyocardiumvasculatureinflow_ml_per_s() const;
  void set_meanmyocardiumvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanmyocardiumvasculatureinflow_ml_per_s() const;
  void _internal_set_meanmyocardiumvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanPulmonaryArteriesInFlow_mL_Per_s = 22;
  void clear_meanpulmonaryarteriesinflow_ml_per_s();
  double meanpulmonaryarteriesinflow_ml_per_s() const;
  void set_meanpulmonaryarteriesinflow_ml_per_s(double value);
  private:
  double _internal_meanpulmonaryarteriesinflow_ml_per_s() const;
  void _internal_set_meanpulmonaryarteriesinflow_ml_per_s(double value);
  public:

  // double MeanPulmonaryCapillariesInFlow_mL_Per_s = 23;
  void clear_meanpulmonarycapillariesinflow_ml_per_s();
  double meanpulmonarycapillariesinflow_ml_per_s() const;
  void set_meanpulmonarycapillariesinflow_ml_per_s(double value);
  private:
  double _internal_meanpulmonarycapillariesinflow_ml_per_s() const;
  void _internal_set_meanpulmonarycapillariesinflow_ml_per_s(double value);
  public:

  // double MeanPulmonaryCapillariesPressure_mmHg = 24;
  void clear_meanpulmonarycapillariespressure_mmhg();
  double meanpulmonarycapillariespressure_mmhg() const;
  void set_meanpulmonarycapillariespressure_mmhg(double value);
  private:
  double _internal_meanpulmonarycapillariespressure_mmhg() const;
  void _internal_set_meanpulmonarycapillariespressure_mmhg(double value);
  public:

  // double MeanPulmonaryVeinsInFlow_mL_Per_s = 25;
  void clear_meanpulmonaryveinsinflow_ml_per_s();
  double meanpulmonaryveinsinflow_ml_per_s() const;
  void set_meanpulmonaryveinsinflow_ml_per_s(double value);
  private:
  double _internal_meanpulmonaryveinsinflow_ml_per_s() const;
  void _internal_set_meanpulmonaryveinsinflow_ml_per_s(double value);
  public:

  // double MeanPulmonaryVeinsPressure_mmHg = 26;
  void clear_meanpulmonaryveinspressure_mmhg();
  double meanpulmonaryveinspressure_mmhg() const;
  void set_meanpulmonaryveinspressure_mmhg(double value);
  private:
  double _internal_meanpulmonaryveinspressure_mmhg() const;
  void _internal_set_meanpulmonaryveinspressure_mmhg(double value);
  public:

  // double MeanRightArmVasculatureInFlow_mL_Per_s = 27;
  void clear_meanrightarmvasculatureinflow_ml_per_s();
  double meanrightarmvasculatureinflow_ml_per_s() const;
  void set_meanrightarmvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanrightarmvasculatureinflow_ml_per_s() const;
  void _internal_set_meanrightarmvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanRightHeartInFlow_mL_Per_s = 28;
  void clear_meanrightheartinflow_ml_per_s();
  double meanrightheartinflow_ml_per_s() const;
  void set_meanrightheartinflow_ml_per_s(double value);
  private:
  double _internal_meanrightheartinflow_ml_per_s() const;
  void _internal_set_meanrightheartinflow_ml_per_s(double value);
  public:

  // uint32 ID = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool AchievedStabilization = 56;
  void clear_achievedstabilization();
  bool achievedstabilization() const;
  void set_achievedstabilization(bool value);
  private:
  bool _internal_achievedstabilization() const;
  void _internal_set_achievedstabilization(bool value);
  public:

  // double MeanRightHeartPressure_mmHg = 29;
  void clear_meanrightheartpressure_mmhg();
  double meanrightheartpressure_mmhg() const;
  void set_meanrightheartpressure_mmhg(double value);
  private:
  double _internal_meanrightheartpressure_mmhg() const;
  void _internal_set_meanrightheartpressure_mmhg(double value);
  public:

  // double MeanRightKidneyVasculatureInFlow_mL_Per_s = 30;
  void clear_meanrightkidneyvasculatureinflow_ml_per_s();
  double meanrightkidneyvasculatureinflow_ml_per_s() const;
  void set_meanrightkidneyvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanrightkidneyvasculatureinflow_ml_per_s() const;
  void _internal_set_meanrightkidneyvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanRightLegVasculatureInFlow_mL_Per_s = 31;
  void clear_meanrightlegvasculatureinflow_ml_per_s();
  double meanrightlegvasculatureinflow_ml_per_s() const;
  void set_meanrightlegvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanrightlegvasculatureinflow_ml_per_s() const;
  void _internal_set_meanrightlegvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanRightPulmonaryArteriesInFlow_mL_Per_s = 32;
  void clear_meanrightpulmonaryarteriesinflow_ml_per_s();
  double meanrightpulmonaryarteriesinflow_ml_per_s() const;
  void set_meanrightpulmonaryarteriesinflow_ml_per_s(double value);
  private:
  double _internal_meanrightpulmonaryarteriesinflow_ml_per_s() const;
  void _internal_set_meanrightpulmonaryarteriesinflow_ml_per_s(double value);
  public:

  // double MeanRightPulmonaryCapillariesInFlow_mL_Per_s = 33;
  void clear_meanrightpulmonarycapillariesinflow_ml_per_s();
  double meanrightpulmonarycapillariesinflow_ml_per_s() const;
  void set_meanrightpulmonarycapillariesinflow_ml_per_s(double value);
  private:
  double _internal_meanrightpulmonarycapillariesinflow_ml_per_s() const;
  void _internal_set_meanrightpulmonarycapillariesinflow_ml_per_s(double value);
  public:

  // double MeanRightPulmonaryVeinsInFlow_mL_Per_s = 34;
  void clear_meanrightpulmonaryveinsinflow_ml_per_s();
  double meanrightpulmonaryveinsinflow_ml_per_s() const;
  void set_meanrightpulmonaryveinsinflow_ml_per_s(double value);
  private:
  double _internal_meanrightpulmonaryveinsinflow_ml_per_s() const;
  void _internal_set_meanrightpulmonaryveinsinflow_ml_per_s(double value);
  public:

  // double MeanSkinVasculatureInFlow_mL_Per_s = 35;
  void clear_meanskinvasculatureinflow_ml_per_s();
  double meanskinvasculatureinflow_ml_per_s() const;
  void set_meanskinvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanskinvasculatureinflow_ml_per_s() const;
  void _internal_set_meanskinvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanSmallIntestineVasculatureInFlow_mL_Per_s = 36;
  void clear_meansmallintestinevasculatureinflow_ml_per_s();
  double meansmallintestinevasculatureinflow_ml_per_s() const;
  void set_meansmallintestinevasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meansmallintestinevasculatureinflow_ml_per_s() const;
  void _internal_set_meansmallintestinevasculatureinflow_ml_per_s(double value);
  public:

  // double MeanSplanchnicVasculatureInFlow_mL_Per_s = 37;
  void clear_meansplanchnicvasculatureinflow_ml_per_s();
  double meansplanchnicvasculatureinflow_ml_per_s() const;
  void set_meansplanchnicvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meansplanchnicvasculatureinflow_ml_per_s() const;
  void _internal_set_meansplanchnicvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanSpleenVasculatureInFlow_mL_Per_s = 38;
  void clear_meanspleenvasculatureinflow_ml_per_s();
  double meanspleenvasculatureinflow_ml_per_s() const;
  void set_meanspleenvasculatureinflow_ml_per_s(double value);
  private:
  double _internal_meanspleenvasculatureinflow_ml_per_s() const;
  void _internal_set_meanspleenvasculatureinflow_ml_per_s(double value);
  public:

  // double MeanVenaCavaInFlow_mL_Per_s = 39;
  void clear_meanvenacavainflow_ml_per_s();
  double meanvenacavainflow_ml_per_s() const;
  void set_meanvenacavainflow_ml_per_s(double value);
  private:
  double _internal_meanvenacavainflow_ml_per_s() const;
  void _internal_set_meanvenacavainflow_ml_per_s(double value);
  public:

  // double MeanVenousCarbonDioxidePartialPressure_mmHg = 40;
  void clear_meanvenouscarbondioxidepartialpressure_mmhg();
  double meanvenouscarbondioxidepartialpressure_mmhg() const;
  void set_meanvenouscarbondioxidepartialpressure_mmhg(double value);
  private:
  double _internal_meanvenouscarbondioxidepartialpressure_mmhg() const;
  void _internal_set_meanvenouscarbondioxidepartialpressure_mmhg(double value);
  public:

  // double MeanVenousOxygenPartialPressure_mmHg = 41;
  void clear_meanvenousoxygenpartialpressure_mmhg();
  double meanvenousoxygenpartialpressure_mmhg() const;
  void set_meanvenousoxygenpartialpressure_mmhg(double value);
  private:
  double _internal_meanvenousoxygenpartialpressure_mmhg() const;
  void _internal_set_meanvenousoxygenpartialpressure_mmhg(double value);
  public:

  // double BloodVolume_mL = 42;
  void clear_bloodvolume_ml();
  double bloodvolume_ml() const;
  void set_bloodvolume_ml(double value);
  private:
  double _internal_bloodvolume_ml() const;
  void _internal_set_bloodvolume_ml(double value);
  public:

  // double CardiacOutput_mL_Per_min = 43;
  void clear_cardiacoutput_ml_per_min();
  double cardiacoutput_ml_per_min() const;
  void set_cardiacoutput_ml_per_min(double value);
  private:
  double _internal_cardiacoutput_ml_per_min() const;
  void _internal_set_cardiacoutput_ml_per_min(double value);
  public:

  // double DiastolicArterialPressure_mmHg = 44;
  void clear_diastolicarterialpressure_mmhg();
  double diastolicarterialpressure_mmhg() const;
  void set_diastolicarterialpressure_mmhg(double value);
  private:
  double _internal_diastolicarterialpressure_mmhg() const;
  void _internal_set_diastolicarterialpressure_mmhg(double value);
  public:

  // double HeartEjectionFraction = 45;
  void clear_heartejectionfraction();
  double heartejectionfraction() const;
  void set_heartejectionfraction(double value);
  private:
  double _internal_heartejectionfraction() const;
  void _internal_set_heartejectionfraction(double value);
  public:

  // double HeartStrokeVolume_mL = 46;
  void clear_heartstrokevolume_ml();
  double heartstrokevolume_ml() const;
  void set_heartstrokevolume_ml(double value);
  private:
  double _internal_heartstrokevolume_ml() const;
  void _internal_set_heartstrokevolume_ml(double value);
  public:

  // double MeanArterialCarbonDioxidePartialPressure_mmHg = 47;
  void clear_meanarterialcarbondioxidepartialpressure_mmhg();
  double meanarterialcarbondioxidepartialpressure_mmhg() const;
  void set_meanarterialcarbondioxidepartialpressure_mmhg(double value);
  private:
  double _internal_meanarterialcarbondioxidepartialpressure_mmhg() const;
  void _internal_set_meanarterialcarbondioxidepartialpressure_mmhg(double value);
  public:

  // double MeanArterialPressure_mmHg = 48;
  void clear_meanarterialpressure_mmhg();
  double meanarterialpressure_mmhg() const;
  void set_meanarterialpressure_mmhg(double value);
  private:
  double _internal_meanarterialpressure_mmhg() const;
  void _internal_set_meanarterialpressure_mmhg(double value);
  public:

  // double MeanCentralVenousPressure_mmHg = 49;
  void clear_meancentralvenouspressure_mmhg();
  double meancentralvenouspressure_mmhg() const;
  void set_meancentralvenouspressure_mmhg(double value);
  private:
  double _internal_meancentralvenouspressure_mmhg() const;
  void _internal_set_meancentralvenouspressure_mmhg(double value);
  public:

  // double PulmonaryDiastolicArterialPressure_mmHg = 50;
  void clear_pulmonarydiastolicarterialpressure_mmhg();
  double pulmonarydiastolicarterialpressure_mmhg() const;
  void set_pulmonarydiastolicarterialpressure_mmhg(double value);
  private:
  double _internal_pulmonarydiastolicarterialpressure_mmhg() const;
  void _internal_set_pulmonarydiastolicarterialpressure_mmhg(double value);
  public:

  // double PulmonaryMeanArterialPressure_mmHg = 51;
  void clear_pulmonarymeanarterialpressure_mmhg();
  double pulmonarymeanarterialpressure_mmhg() const;
  void set_pulmonarymeanarterialpressure_mmhg(double value);
  private:
  double _internal_pulmonarymeanarterialpressure_mmhg() const;
  void _internal_set_pulmonarymeanarterialpressure_mmhg(double value);
  public:

  // double PulmonaryMeanCapillaryFlow_mL_Per_s = 52;
  void clear_pulmonarymeancapillaryflow_ml_per_s();
  double pulmonarymeancapillaryflow_ml_per_s() const;
  void set_pulmonarymeancapillaryflow_ml_per_s(double value);
  private:
  double _internal_pulmonarymeancapillaryflow_ml_per_s() const;
  void _internal_set_pulmonarymeancapillaryflow_ml_per_s(double value);
  public:

  // double PulmonarySystolicArterialPressure_mmHg = 53;
  void clear_pulmonarysystolicarterialpressure_mmhg();
  double pulmonarysystolicarterialpressure_mmhg() const;
  void set_pulmonarysystolicarterialpressure_mmhg(double value);
  private:
  double _internal_pulmonarysystolicarterialpressure_mmhg() const;
  void _internal_set_pulmonarysystolicarterialpressure_mmhg(double value);
  public:

  // double SystolicArterialPressure_mmHg = 54;
  void clear_systolicarterialpressure_mmhg();
  double systolicarterialpressure_mmhg() const;
  void set_systolicarterialpressure_mmhg(double value);
  private:
  double _internal_systolicarterialpressure_mmhg() const;
  void _internal_set_systolicarterialpressure_mmhg(double value);
  public:

  // double SystemicVascularResistance_mmHg_s_Per_L = 55;
  void clear_systemicvascularresistance_mmhg_s_per_l();
  double systemicvascularresistance_mmhg_s_per_l() const;
  void set_systemicvascularresistance_mmhg_s_per_l(double value);
  private:
  double _internal_systemicvascularresistance_mmhg_s_per_l() const;
  void _internal_set_systemicvascularresistance_mmhg_s_per_l(double value);
  public:

  // double StabilizationTime_s = 57;
  void clear_stabilizationtime_s();
  double stabilizationtime_s() const;
  void set_stabilizationtime_s(double value);
  private:
  double _internal_stabilizationtime_s() const;
  void _internal_set_stabilizationtime_s(double value);
  public:

  // double TotalSimulationTime_s = 58;
  void clear_totalsimulationtime_s();
  double totalsimulationtime_s() const;
  void set_totalsimulationtime_s(double value);
  private:
  double _internal_totalsimulationtime_s() const;
  void _internal_set_totalsimulationtime_s(double value);
  public:

  // @@protoc_insertion_point(class_scope:pulse.study.bind.sensitivity_analysis.SimulationData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::pulse::cdm::bind::OverridesData* overrides_;
  double meanaortainflow_ml_per_s_;
  double meanarterialoxygenpartialpressure_mmhg_;
  double meanbonevasculatureinflow_ml_per_s_;
  double meanbrainvasculatureinflow_ml_per_s_;
  double meanfatvasculatureinflow_ml_per_s_;
  double meankidneyvasculatureinflow_ml_per_s_;
  double meanlargeintestinevasculatureinflow_ml_per_s_;
  double meanleftarmvasculatureinflow_ml_per_s_;
  double meanleftheartinflow_ml_per_s_;
  double meanleftheartpressure_mmhg_;
  double meanleftkidneyvasculatureinflow_ml_per_s_;
  double meanleftlegvasculatureinflow_ml_per_s_;
  double meanleftpulmonaryarteriesinflow_ml_per_s_;
  double meanleftpulmonarycapillariesinflow_ml_per_s_;
  double meanleftpulmonaryveinsinflow_ml_per_s_;
  double meanlivervasculatureinflow_ml_per_s_;
  double meanmusclevasculatureinflow_ml_per_s_;
  double meanmyocardiumvasculatureinflow_ml_per_s_;
  double meanpulmonaryarteriesinflow_ml_per_s_;
  double meanpulmonarycapillariesinflow_ml_per_s_;
  double meanpulmonarycapillariespressure_mmhg_;
  double meanpulmonaryveinsinflow_ml_per_s_;
  double meanpulmonaryveinspressure_mmhg_;
  double meanrightarmvasculatureinflow_ml_per_s_;
  double meanrightheartinflow_ml_per_s_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  bool achievedstabilization_;
  double meanrightheartpressure_mmhg_;
  double meanrightkidneyvasculatureinflow_ml_per_s_;
  double meanrightlegvasculatureinflow_ml_per_s_;
  double meanrightpulmonaryarteriesinflow_ml_per_s_;
  double meanrightpulmonarycapillariesinflow_ml_per_s_;
  double meanrightpulmonaryveinsinflow_ml_per_s_;
  double meanskinvasculatureinflow_ml_per_s_;
  double meansmallintestinevasculatureinflow_ml_per_s_;
  double meansplanchnicvasculatureinflow_ml_per_s_;
  double meanspleenvasculatureinflow_ml_per_s_;
  double meanvenacavainflow_ml_per_s_;
  double meanvenouscarbondioxidepartialpressure_mmhg_;
  double meanvenousoxygenpartialpressure_mmhg_;
  double bloodvolume_ml_;
  double cardiacoutput_ml_per_min_;
  double diastolicarterialpressure_mmhg_;
  double heartejectionfraction_;
  double heartstrokevolume_ml_;
  double meanarterialcarbondioxidepartialpressure_mmhg_;
  double meanarterialpressure_mmhg_;
  double meancentralvenouspressure_mmhg_;
  double pulmonarydiastolicarterialpressure_mmhg_;
  double pulmonarymeanarterialpressure_mmhg_;
  double pulmonarymeancapillaryflow_ml_per_s_;
  double pulmonarysystolicarterialpressure_mmhg_;
  double systolicarterialpressure_mmhg_;
  double systemicvascularresistance_mmhg_s_per_l_;
  double stabilizationtime_s_;
  double totalsimulationtime_s_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto;
};
// -------------------------------------------------------------------

class SimulationListData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pulse.study.bind.sensitivity_analysis.SimulationListData) */ {
 public:
  inline SimulationListData() : SimulationListData(nullptr) {}
  virtual ~SimulationListData();

  SimulationListData(const SimulationListData& from);
  SimulationListData(SimulationListData&& from) noexcept
    : SimulationListData() {
    *this = ::std::move(from);
  }

  inline SimulationListData& operator=(const SimulationListData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulationListData& operator=(SimulationListData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulationListData& default_instance();

  static inline const SimulationListData* internal_default_instance() {
    return reinterpret_cast<const SimulationListData*>(
               &_SimulationListData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SimulationListData& a, SimulationListData& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulationListData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulationListData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulationListData* New() const final {
    return CreateMaybeMessage<SimulationListData>(nullptr);
  }

  SimulationListData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulationListData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SimulationListData& from);
  void MergeFrom(const SimulationListData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulationListData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pulse.study.bind.sensitivity_analysis.SimulationListData";
  }
  protected:
  explicit SimulationListData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto);
    return ::descriptor_table_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSimulationFieldNumber = 2,
    kOutputRootDirFieldNumber = 1,
  };
  // repeated .pulse.study.bind.sensitivity_analysis.SimulationData Simulation = 2;
  int simulation_size() const;
  private:
  int _internal_simulation_size() const;
  public:
  void clear_simulation();
  ::pulse::study::bind::sensitivity_analysis::SimulationData* mutable_simulation(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pulse::study::bind::sensitivity_analysis::SimulationData >*
      mutable_simulation();
  private:
  const ::pulse::study::bind::sensitivity_analysis::SimulationData& _internal_simulation(int index) const;
  ::pulse::study::bind::sensitivity_analysis::SimulationData* _internal_add_simulation();
  public:
  const ::pulse::study::bind::sensitivity_analysis::SimulationData& simulation(int index) const;
  ::pulse::study::bind::sensitivity_analysis::SimulationData* add_simulation();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pulse::study::bind::sensitivity_analysis::SimulationData >&
      simulation() const;

  // string OutputRootDir = 1;
  void clear_outputrootdir();
  const std::string& outputrootdir() const;
  void set_outputrootdir(const std::string& value);
  void set_outputrootdir(std::string&& value);
  void set_outputrootdir(const char* value);
  void set_outputrootdir(const char* value, size_t size);
  std::string* mutable_outputrootdir();
  std::string* release_outputrootdir();
  void set_allocated_outputrootdir(std::string* outputrootdir);
  private:
  const std::string& _internal_outputrootdir() const;
  void _internal_set_outputrootdir(const std::string& value);
  std::string* _internal_mutable_outputrootdir();
  public:

  // @@protoc_insertion_point(class_scope:pulse.study.bind.sensitivity_analysis.SimulationListData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pulse::study::bind::sensitivity_analysis::SimulationData > simulation_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr outputrootdir_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SimulationData

// uint32 ID = 1;
inline void SimulationData::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SimulationData::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SimulationData::id() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.ID)
  return _internal_id();
}
inline void SimulationData::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void SimulationData::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.ID)
}

// string Name = 2;
inline void SimulationData::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& SimulationData::name() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.Name)
  return _internal_name();
}
inline void SimulationData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.Name)
}
inline std::string* SimulationData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:pulse.study.bind.sensitivity_analysis.SimulationData.Name)
  return _internal_mutable_name();
}
inline const std::string& SimulationData::_internal_name() const {
  return name_.Get();
}
inline void SimulationData::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SimulationData::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:pulse.study.bind.sensitivity_analysis.SimulationData.Name)
}
inline void SimulationData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:pulse.study.bind.sensitivity_analysis.SimulationData.Name)
}
inline void SimulationData::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:pulse.study.bind.sensitivity_analysis.SimulationData.Name)
}
inline std::string* SimulationData::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SimulationData::release_name() {
  // @@protoc_insertion_point(field_release:pulse.study.bind.sensitivity_analysis.SimulationData.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SimulationData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:pulse.study.bind.sensitivity_analysis.SimulationData.Name)
}

// .pulse.cdm.bind.OverridesData Overrides = 3;
inline bool SimulationData::_internal_has_overrides() const {
  return this != internal_default_instance() && overrides_ != nullptr;
}
inline bool SimulationData::has_overrides() const {
  return _internal_has_overrides();
}
inline const ::pulse::cdm::bind::OverridesData& SimulationData::_internal_overrides() const {
  const ::pulse::cdm::bind::OverridesData* p = overrides_;
  return p != nullptr ? *p : reinterpret_cast<const ::pulse::cdm::bind::OverridesData&>(
      ::pulse::cdm::bind::_OverridesData_default_instance_);
}
inline const ::pulse::cdm::bind::OverridesData& SimulationData::overrides() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.Overrides)
  return _internal_overrides();
}
inline void SimulationData::unsafe_arena_set_allocated_overrides(
    ::pulse::cdm::bind::OverridesData* overrides) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(overrides_);
  }
  overrides_ = overrides;
  if (overrides) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pulse.study.bind.sensitivity_analysis.SimulationData.Overrides)
}
inline ::pulse::cdm::bind::OverridesData* SimulationData::release_overrides() {
  
  ::pulse::cdm::bind::OverridesData* temp = overrides_;
  overrides_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pulse::cdm::bind::OverridesData* SimulationData::unsafe_arena_release_overrides() {
  // @@protoc_insertion_point(field_release:pulse.study.bind.sensitivity_analysis.SimulationData.Overrides)
  
  ::pulse::cdm::bind::OverridesData* temp = overrides_;
  overrides_ = nullptr;
  return temp;
}
inline ::pulse::cdm::bind::OverridesData* SimulationData::_internal_mutable_overrides() {
  
  if (overrides_ == nullptr) {
    auto* p = CreateMaybeMessage<::pulse::cdm::bind::OverridesData>(GetArena());
    overrides_ = p;
  }
  return overrides_;
}
inline ::pulse::cdm::bind::OverridesData* SimulationData::mutable_overrides() {
  // @@protoc_insertion_point(field_mutable:pulse.study.bind.sensitivity_analysis.SimulationData.Overrides)
  return _internal_mutable_overrides();
}
inline void SimulationData::set_allocated_overrides(::pulse::cdm::bind::OverridesData* overrides) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(overrides_);
  }
  if (overrides) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(overrides)->GetArena();
    if (message_arena != submessage_arena) {
      overrides = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, overrides, submessage_arena);
    }
    
  } else {
    
  }
  overrides_ = overrides;
  // @@protoc_insertion_point(field_set_allocated:pulse.study.bind.sensitivity_analysis.SimulationData.Overrides)
}

// double MeanAortaInFlow_mL_Per_s = 4;
inline void SimulationData::clear_meanaortainflow_ml_per_s() {
  meanaortainflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanaortainflow_ml_per_s() const {
  return meanaortainflow_ml_per_s_;
}
inline double SimulationData::meanaortainflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanAortaInFlow_mL_Per_s)
  return _internal_meanaortainflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanaortainflow_ml_per_s(double value) {
  
  meanaortainflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanaortainflow_ml_per_s(double value) {
  _internal_set_meanaortainflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanAortaInFlow_mL_Per_s)
}

// double MeanArterialOxygenPartialPressure_mmHg = 5;
inline void SimulationData::clear_meanarterialoxygenpartialpressure_mmhg() {
  meanarterialoxygenpartialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanarterialoxygenpartialpressure_mmhg() const {
  return meanarterialoxygenpartialpressure_mmhg_;
}
inline double SimulationData::meanarterialoxygenpartialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanArterialOxygenPartialPressure_mmHg)
  return _internal_meanarterialoxygenpartialpressure_mmhg();
}
inline void SimulationData::_internal_set_meanarterialoxygenpartialpressure_mmhg(double value) {
  
  meanarterialoxygenpartialpressure_mmhg_ = value;
}
inline void SimulationData::set_meanarterialoxygenpartialpressure_mmhg(double value) {
  _internal_set_meanarterialoxygenpartialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanArterialOxygenPartialPressure_mmHg)
}

// double MeanBoneVasculatureInFlow_mL_Per_s = 6;
inline void SimulationData::clear_meanbonevasculatureinflow_ml_per_s() {
  meanbonevasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanbonevasculatureinflow_ml_per_s() const {
  return meanbonevasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanbonevasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanBoneVasculatureInFlow_mL_Per_s)
  return _internal_meanbonevasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanbonevasculatureinflow_ml_per_s(double value) {
  
  meanbonevasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanbonevasculatureinflow_ml_per_s(double value) {
  _internal_set_meanbonevasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanBoneVasculatureInFlow_mL_Per_s)
}

// double MeanBrainVasculatureInFlow_mL_Per_s = 7;
inline void SimulationData::clear_meanbrainvasculatureinflow_ml_per_s() {
  meanbrainvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanbrainvasculatureinflow_ml_per_s() const {
  return meanbrainvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanbrainvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanBrainVasculatureInFlow_mL_Per_s)
  return _internal_meanbrainvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanbrainvasculatureinflow_ml_per_s(double value) {
  
  meanbrainvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanbrainvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanbrainvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanBrainVasculatureInFlow_mL_Per_s)
}

// double MeanFatVasculatureInFlow_mL_Per_s = 8;
inline void SimulationData::clear_meanfatvasculatureinflow_ml_per_s() {
  meanfatvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanfatvasculatureinflow_ml_per_s() const {
  return meanfatvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanfatvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanFatVasculatureInFlow_mL_Per_s)
  return _internal_meanfatvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanfatvasculatureinflow_ml_per_s(double value) {
  
  meanfatvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanfatvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanfatvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanFatVasculatureInFlow_mL_Per_s)
}

// double MeanKidneyVasculatureInFlow_mL_Per_s = 9;
inline void SimulationData::clear_meankidneyvasculatureinflow_ml_per_s() {
  meankidneyvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meankidneyvasculatureinflow_ml_per_s() const {
  return meankidneyvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meankidneyvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanKidneyVasculatureInFlow_mL_Per_s)
  return _internal_meankidneyvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meankidneyvasculatureinflow_ml_per_s(double value) {
  
  meankidneyvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meankidneyvasculatureinflow_ml_per_s(double value) {
  _internal_set_meankidneyvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanKidneyVasculatureInFlow_mL_Per_s)
}

// double MeanLargeIntestineVasculatureInFlow_mL_Per_s = 10;
inline void SimulationData::clear_meanlargeintestinevasculatureinflow_ml_per_s() {
  meanlargeintestinevasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanlargeintestinevasculatureinflow_ml_per_s() const {
  return meanlargeintestinevasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanlargeintestinevasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLargeIntestineVasculatureInFlow_mL_Per_s)
  return _internal_meanlargeintestinevasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanlargeintestinevasculatureinflow_ml_per_s(double value) {
  
  meanlargeintestinevasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanlargeintestinevasculatureinflow_ml_per_s(double value) {
  _internal_set_meanlargeintestinevasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLargeIntestineVasculatureInFlow_mL_Per_s)
}

// double MeanLeftArmVasculatureInFlow_mL_Per_s = 11;
inline void SimulationData::clear_meanleftarmvasculatureinflow_ml_per_s() {
  meanleftarmvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanleftarmvasculatureinflow_ml_per_s() const {
  return meanleftarmvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanleftarmvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftArmVasculatureInFlow_mL_Per_s)
  return _internal_meanleftarmvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanleftarmvasculatureinflow_ml_per_s(double value) {
  
  meanleftarmvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanleftarmvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanleftarmvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftArmVasculatureInFlow_mL_Per_s)
}

// double MeanLeftHeartInFlow_mL_Per_s = 12;
inline void SimulationData::clear_meanleftheartinflow_ml_per_s() {
  meanleftheartinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanleftheartinflow_ml_per_s() const {
  return meanleftheartinflow_ml_per_s_;
}
inline double SimulationData::meanleftheartinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftHeartInFlow_mL_Per_s)
  return _internal_meanleftheartinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanleftheartinflow_ml_per_s(double value) {
  
  meanleftheartinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanleftheartinflow_ml_per_s(double value) {
  _internal_set_meanleftheartinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftHeartInFlow_mL_Per_s)
}

// double MeanLeftHeartPressure_mmHg = 13;
inline void SimulationData::clear_meanleftheartpressure_mmhg() {
  meanleftheartpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanleftheartpressure_mmhg() const {
  return meanleftheartpressure_mmhg_;
}
inline double SimulationData::meanleftheartpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftHeartPressure_mmHg)
  return _internal_meanleftheartpressure_mmhg();
}
inline void SimulationData::_internal_set_meanleftheartpressure_mmhg(double value) {
  
  meanleftheartpressure_mmhg_ = value;
}
inline void SimulationData::set_meanleftheartpressure_mmhg(double value) {
  _internal_set_meanleftheartpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftHeartPressure_mmHg)
}

// double MeanLeftKidneyVasculatureInFlow_mL_Per_s = 14;
inline void SimulationData::clear_meanleftkidneyvasculatureinflow_ml_per_s() {
  meanleftkidneyvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanleftkidneyvasculatureinflow_ml_per_s() const {
  return meanleftkidneyvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanleftkidneyvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftKidneyVasculatureInFlow_mL_Per_s)
  return _internal_meanleftkidneyvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanleftkidneyvasculatureinflow_ml_per_s(double value) {
  
  meanleftkidneyvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanleftkidneyvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanleftkidneyvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftKidneyVasculatureInFlow_mL_Per_s)
}

// double MeanLeftLegVasculatureInFlow_mL_Per_s = 15;
inline void SimulationData::clear_meanleftlegvasculatureinflow_ml_per_s() {
  meanleftlegvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanleftlegvasculatureinflow_ml_per_s() const {
  return meanleftlegvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanleftlegvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftLegVasculatureInFlow_mL_Per_s)
  return _internal_meanleftlegvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanleftlegvasculatureinflow_ml_per_s(double value) {
  
  meanleftlegvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanleftlegvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanleftlegvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftLegVasculatureInFlow_mL_Per_s)
}

// double MeanLeftPulmonaryArteriesInFlow_mL_Per_s = 16;
inline void SimulationData::clear_meanleftpulmonaryarteriesinflow_ml_per_s() {
  meanleftpulmonaryarteriesinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanleftpulmonaryarteriesinflow_ml_per_s() const {
  return meanleftpulmonaryarteriesinflow_ml_per_s_;
}
inline double SimulationData::meanleftpulmonaryarteriesinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftPulmonaryArteriesInFlow_mL_Per_s)
  return _internal_meanleftpulmonaryarteriesinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanleftpulmonaryarteriesinflow_ml_per_s(double value) {
  
  meanleftpulmonaryarteriesinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanleftpulmonaryarteriesinflow_ml_per_s(double value) {
  _internal_set_meanleftpulmonaryarteriesinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftPulmonaryArteriesInFlow_mL_Per_s)
}

// double MeanLeftPulmonaryCapillariesInFlow_mL_Per_s = 17;
inline void SimulationData::clear_meanleftpulmonarycapillariesinflow_ml_per_s() {
  meanleftpulmonarycapillariesinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanleftpulmonarycapillariesinflow_ml_per_s() const {
  return meanleftpulmonarycapillariesinflow_ml_per_s_;
}
inline double SimulationData::meanleftpulmonarycapillariesinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftPulmonaryCapillariesInFlow_mL_Per_s)
  return _internal_meanleftpulmonarycapillariesinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanleftpulmonarycapillariesinflow_ml_per_s(double value) {
  
  meanleftpulmonarycapillariesinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanleftpulmonarycapillariesinflow_ml_per_s(double value) {
  _internal_set_meanleftpulmonarycapillariesinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftPulmonaryCapillariesInFlow_mL_Per_s)
}

// double MeanLeftPulmonaryVeinsInFlow_mL_Per_s = 18;
inline void SimulationData::clear_meanleftpulmonaryveinsinflow_ml_per_s() {
  meanleftpulmonaryveinsinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanleftpulmonaryveinsinflow_ml_per_s() const {
  return meanleftpulmonaryveinsinflow_ml_per_s_;
}
inline double SimulationData::meanleftpulmonaryveinsinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftPulmonaryVeinsInFlow_mL_Per_s)
  return _internal_meanleftpulmonaryveinsinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanleftpulmonaryveinsinflow_ml_per_s(double value) {
  
  meanleftpulmonaryveinsinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanleftpulmonaryveinsinflow_ml_per_s(double value) {
  _internal_set_meanleftpulmonaryveinsinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLeftPulmonaryVeinsInFlow_mL_Per_s)
}

// double MeanLiverVasculatureInFlow_mL_Per_s = 19;
inline void SimulationData::clear_meanlivervasculatureinflow_ml_per_s() {
  meanlivervasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanlivervasculatureinflow_ml_per_s() const {
  return meanlivervasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanlivervasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLiverVasculatureInFlow_mL_Per_s)
  return _internal_meanlivervasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanlivervasculatureinflow_ml_per_s(double value) {
  
  meanlivervasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanlivervasculatureinflow_ml_per_s(double value) {
  _internal_set_meanlivervasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanLiverVasculatureInFlow_mL_Per_s)
}

// double MeanMuscleVasculatureInFlow_mL_Per_s = 20;
inline void SimulationData::clear_meanmusclevasculatureinflow_ml_per_s() {
  meanmusclevasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanmusclevasculatureinflow_ml_per_s() const {
  return meanmusclevasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanmusclevasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanMuscleVasculatureInFlow_mL_Per_s)
  return _internal_meanmusclevasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanmusclevasculatureinflow_ml_per_s(double value) {
  
  meanmusclevasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanmusclevasculatureinflow_ml_per_s(double value) {
  _internal_set_meanmusclevasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanMuscleVasculatureInFlow_mL_Per_s)
}

// double MeanMyocardiumVasculatureInFlow_mL_Per_s = 21;
inline void SimulationData::clear_meanmyocardiumvasculatureinflow_ml_per_s() {
  meanmyocardiumvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanmyocardiumvasculatureinflow_ml_per_s() const {
  return meanmyocardiumvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanmyocardiumvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanMyocardiumVasculatureInFlow_mL_Per_s)
  return _internal_meanmyocardiumvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanmyocardiumvasculatureinflow_ml_per_s(double value) {
  
  meanmyocardiumvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanmyocardiumvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanmyocardiumvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanMyocardiumVasculatureInFlow_mL_Per_s)
}

// double MeanPulmonaryArteriesInFlow_mL_Per_s = 22;
inline void SimulationData::clear_meanpulmonaryarteriesinflow_ml_per_s() {
  meanpulmonaryarteriesinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanpulmonaryarteriesinflow_ml_per_s() const {
  return meanpulmonaryarteriesinflow_ml_per_s_;
}
inline double SimulationData::meanpulmonaryarteriesinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryArteriesInFlow_mL_Per_s)
  return _internal_meanpulmonaryarteriesinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanpulmonaryarteriesinflow_ml_per_s(double value) {
  
  meanpulmonaryarteriesinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanpulmonaryarteriesinflow_ml_per_s(double value) {
  _internal_set_meanpulmonaryarteriesinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryArteriesInFlow_mL_Per_s)
}

// double MeanPulmonaryCapillariesInFlow_mL_Per_s = 23;
inline void SimulationData::clear_meanpulmonarycapillariesinflow_ml_per_s() {
  meanpulmonarycapillariesinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanpulmonarycapillariesinflow_ml_per_s() const {
  return meanpulmonarycapillariesinflow_ml_per_s_;
}
inline double SimulationData::meanpulmonarycapillariesinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryCapillariesInFlow_mL_Per_s)
  return _internal_meanpulmonarycapillariesinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanpulmonarycapillariesinflow_ml_per_s(double value) {
  
  meanpulmonarycapillariesinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanpulmonarycapillariesinflow_ml_per_s(double value) {
  _internal_set_meanpulmonarycapillariesinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryCapillariesInFlow_mL_Per_s)
}

// double MeanPulmonaryCapillariesPressure_mmHg = 24;
inline void SimulationData::clear_meanpulmonarycapillariespressure_mmhg() {
  meanpulmonarycapillariespressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanpulmonarycapillariespressure_mmhg() const {
  return meanpulmonarycapillariespressure_mmhg_;
}
inline double SimulationData::meanpulmonarycapillariespressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryCapillariesPressure_mmHg)
  return _internal_meanpulmonarycapillariespressure_mmhg();
}
inline void SimulationData::_internal_set_meanpulmonarycapillariespressure_mmhg(double value) {
  
  meanpulmonarycapillariespressure_mmhg_ = value;
}
inline void SimulationData::set_meanpulmonarycapillariespressure_mmhg(double value) {
  _internal_set_meanpulmonarycapillariespressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryCapillariesPressure_mmHg)
}

// double MeanPulmonaryVeinsInFlow_mL_Per_s = 25;
inline void SimulationData::clear_meanpulmonaryveinsinflow_ml_per_s() {
  meanpulmonaryveinsinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanpulmonaryveinsinflow_ml_per_s() const {
  return meanpulmonaryveinsinflow_ml_per_s_;
}
inline double SimulationData::meanpulmonaryveinsinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryVeinsInFlow_mL_Per_s)
  return _internal_meanpulmonaryveinsinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanpulmonaryveinsinflow_ml_per_s(double value) {
  
  meanpulmonaryveinsinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanpulmonaryveinsinflow_ml_per_s(double value) {
  _internal_set_meanpulmonaryveinsinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryVeinsInFlow_mL_Per_s)
}

// double MeanPulmonaryVeinsPressure_mmHg = 26;
inline void SimulationData::clear_meanpulmonaryveinspressure_mmhg() {
  meanpulmonaryveinspressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanpulmonaryveinspressure_mmhg() const {
  return meanpulmonaryveinspressure_mmhg_;
}
inline double SimulationData::meanpulmonaryveinspressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryVeinsPressure_mmHg)
  return _internal_meanpulmonaryveinspressure_mmhg();
}
inline void SimulationData::_internal_set_meanpulmonaryveinspressure_mmhg(double value) {
  
  meanpulmonaryveinspressure_mmhg_ = value;
}
inline void SimulationData::set_meanpulmonaryveinspressure_mmhg(double value) {
  _internal_set_meanpulmonaryveinspressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanPulmonaryVeinsPressure_mmHg)
}

// double MeanRightArmVasculatureInFlow_mL_Per_s = 27;
inline void SimulationData::clear_meanrightarmvasculatureinflow_ml_per_s() {
  meanrightarmvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanrightarmvasculatureinflow_ml_per_s() const {
  return meanrightarmvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanrightarmvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightArmVasculatureInFlow_mL_Per_s)
  return _internal_meanrightarmvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanrightarmvasculatureinflow_ml_per_s(double value) {
  
  meanrightarmvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanrightarmvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanrightarmvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightArmVasculatureInFlow_mL_Per_s)
}

// double MeanRightHeartInFlow_mL_Per_s = 28;
inline void SimulationData::clear_meanrightheartinflow_ml_per_s() {
  meanrightheartinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanrightheartinflow_ml_per_s() const {
  return meanrightheartinflow_ml_per_s_;
}
inline double SimulationData::meanrightheartinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightHeartInFlow_mL_Per_s)
  return _internal_meanrightheartinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanrightheartinflow_ml_per_s(double value) {
  
  meanrightheartinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanrightheartinflow_ml_per_s(double value) {
  _internal_set_meanrightheartinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightHeartInFlow_mL_Per_s)
}

// double MeanRightHeartPressure_mmHg = 29;
inline void SimulationData::clear_meanrightheartpressure_mmhg() {
  meanrightheartpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanrightheartpressure_mmhg() const {
  return meanrightheartpressure_mmhg_;
}
inline double SimulationData::meanrightheartpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightHeartPressure_mmHg)
  return _internal_meanrightheartpressure_mmhg();
}
inline void SimulationData::_internal_set_meanrightheartpressure_mmhg(double value) {
  
  meanrightheartpressure_mmhg_ = value;
}
inline void SimulationData::set_meanrightheartpressure_mmhg(double value) {
  _internal_set_meanrightheartpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightHeartPressure_mmHg)
}

// double MeanRightKidneyVasculatureInFlow_mL_Per_s = 30;
inline void SimulationData::clear_meanrightkidneyvasculatureinflow_ml_per_s() {
  meanrightkidneyvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanrightkidneyvasculatureinflow_ml_per_s() const {
  return meanrightkidneyvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanrightkidneyvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightKidneyVasculatureInFlow_mL_Per_s)
  return _internal_meanrightkidneyvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanrightkidneyvasculatureinflow_ml_per_s(double value) {
  
  meanrightkidneyvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanrightkidneyvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanrightkidneyvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightKidneyVasculatureInFlow_mL_Per_s)
}

// double MeanRightLegVasculatureInFlow_mL_Per_s = 31;
inline void SimulationData::clear_meanrightlegvasculatureinflow_ml_per_s() {
  meanrightlegvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanrightlegvasculatureinflow_ml_per_s() const {
  return meanrightlegvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanrightlegvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightLegVasculatureInFlow_mL_Per_s)
  return _internal_meanrightlegvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanrightlegvasculatureinflow_ml_per_s(double value) {
  
  meanrightlegvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanrightlegvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanrightlegvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightLegVasculatureInFlow_mL_Per_s)
}

// double MeanRightPulmonaryArteriesInFlow_mL_Per_s = 32;
inline void SimulationData::clear_meanrightpulmonaryarteriesinflow_ml_per_s() {
  meanrightpulmonaryarteriesinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanrightpulmonaryarteriesinflow_ml_per_s() const {
  return meanrightpulmonaryarteriesinflow_ml_per_s_;
}
inline double SimulationData::meanrightpulmonaryarteriesinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightPulmonaryArteriesInFlow_mL_Per_s)
  return _internal_meanrightpulmonaryarteriesinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanrightpulmonaryarteriesinflow_ml_per_s(double value) {
  
  meanrightpulmonaryarteriesinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanrightpulmonaryarteriesinflow_ml_per_s(double value) {
  _internal_set_meanrightpulmonaryarteriesinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightPulmonaryArteriesInFlow_mL_Per_s)
}

// double MeanRightPulmonaryCapillariesInFlow_mL_Per_s = 33;
inline void SimulationData::clear_meanrightpulmonarycapillariesinflow_ml_per_s() {
  meanrightpulmonarycapillariesinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanrightpulmonarycapillariesinflow_ml_per_s() const {
  return meanrightpulmonarycapillariesinflow_ml_per_s_;
}
inline double SimulationData::meanrightpulmonarycapillariesinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightPulmonaryCapillariesInFlow_mL_Per_s)
  return _internal_meanrightpulmonarycapillariesinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanrightpulmonarycapillariesinflow_ml_per_s(double value) {
  
  meanrightpulmonarycapillariesinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanrightpulmonarycapillariesinflow_ml_per_s(double value) {
  _internal_set_meanrightpulmonarycapillariesinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightPulmonaryCapillariesInFlow_mL_Per_s)
}

// double MeanRightPulmonaryVeinsInFlow_mL_Per_s = 34;
inline void SimulationData::clear_meanrightpulmonaryveinsinflow_ml_per_s() {
  meanrightpulmonaryveinsinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanrightpulmonaryveinsinflow_ml_per_s() const {
  return meanrightpulmonaryveinsinflow_ml_per_s_;
}
inline double SimulationData::meanrightpulmonaryveinsinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightPulmonaryVeinsInFlow_mL_Per_s)
  return _internal_meanrightpulmonaryveinsinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanrightpulmonaryveinsinflow_ml_per_s(double value) {
  
  meanrightpulmonaryveinsinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanrightpulmonaryveinsinflow_ml_per_s(double value) {
  _internal_set_meanrightpulmonaryveinsinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanRightPulmonaryVeinsInFlow_mL_Per_s)
}

// double MeanSkinVasculatureInFlow_mL_Per_s = 35;
inline void SimulationData::clear_meanskinvasculatureinflow_ml_per_s() {
  meanskinvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanskinvasculatureinflow_ml_per_s() const {
  return meanskinvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanskinvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanSkinVasculatureInFlow_mL_Per_s)
  return _internal_meanskinvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanskinvasculatureinflow_ml_per_s(double value) {
  
  meanskinvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanskinvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanskinvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanSkinVasculatureInFlow_mL_Per_s)
}

// double MeanSmallIntestineVasculatureInFlow_mL_Per_s = 36;
inline void SimulationData::clear_meansmallintestinevasculatureinflow_ml_per_s() {
  meansmallintestinevasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meansmallintestinevasculatureinflow_ml_per_s() const {
  return meansmallintestinevasculatureinflow_ml_per_s_;
}
inline double SimulationData::meansmallintestinevasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanSmallIntestineVasculatureInFlow_mL_Per_s)
  return _internal_meansmallintestinevasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meansmallintestinevasculatureinflow_ml_per_s(double value) {
  
  meansmallintestinevasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meansmallintestinevasculatureinflow_ml_per_s(double value) {
  _internal_set_meansmallintestinevasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanSmallIntestineVasculatureInFlow_mL_Per_s)
}

// double MeanSplanchnicVasculatureInFlow_mL_Per_s = 37;
inline void SimulationData::clear_meansplanchnicvasculatureinflow_ml_per_s() {
  meansplanchnicvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meansplanchnicvasculatureinflow_ml_per_s() const {
  return meansplanchnicvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meansplanchnicvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanSplanchnicVasculatureInFlow_mL_Per_s)
  return _internal_meansplanchnicvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meansplanchnicvasculatureinflow_ml_per_s(double value) {
  
  meansplanchnicvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meansplanchnicvasculatureinflow_ml_per_s(double value) {
  _internal_set_meansplanchnicvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanSplanchnicVasculatureInFlow_mL_Per_s)
}

// double MeanSpleenVasculatureInFlow_mL_Per_s = 38;
inline void SimulationData::clear_meanspleenvasculatureinflow_ml_per_s() {
  meanspleenvasculatureinflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanspleenvasculatureinflow_ml_per_s() const {
  return meanspleenvasculatureinflow_ml_per_s_;
}
inline double SimulationData::meanspleenvasculatureinflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanSpleenVasculatureInFlow_mL_Per_s)
  return _internal_meanspleenvasculatureinflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanspleenvasculatureinflow_ml_per_s(double value) {
  
  meanspleenvasculatureinflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanspleenvasculatureinflow_ml_per_s(double value) {
  _internal_set_meanspleenvasculatureinflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanSpleenVasculatureInFlow_mL_Per_s)
}

// double MeanVenaCavaInFlow_mL_Per_s = 39;
inline void SimulationData::clear_meanvenacavainflow_ml_per_s() {
  meanvenacavainflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_meanvenacavainflow_ml_per_s() const {
  return meanvenacavainflow_ml_per_s_;
}
inline double SimulationData::meanvenacavainflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanVenaCavaInFlow_mL_Per_s)
  return _internal_meanvenacavainflow_ml_per_s();
}
inline void SimulationData::_internal_set_meanvenacavainflow_ml_per_s(double value) {
  
  meanvenacavainflow_ml_per_s_ = value;
}
inline void SimulationData::set_meanvenacavainflow_ml_per_s(double value) {
  _internal_set_meanvenacavainflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanVenaCavaInFlow_mL_Per_s)
}

// double MeanVenousCarbonDioxidePartialPressure_mmHg = 40;
inline void SimulationData::clear_meanvenouscarbondioxidepartialpressure_mmhg() {
  meanvenouscarbondioxidepartialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanvenouscarbondioxidepartialpressure_mmhg() const {
  return meanvenouscarbondioxidepartialpressure_mmhg_;
}
inline double SimulationData::meanvenouscarbondioxidepartialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanVenousCarbonDioxidePartialPressure_mmHg)
  return _internal_meanvenouscarbondioxidepartialpressure_mmhg();
}
inline void SimulationData::_internal_set_meanvenouscarbondioxidepartialpressure_mmhg(double value) {
  
  meanvenouscarbondioxidepartialpressure_mmhg_ = value;
}
inline void SimulationData::set_meanvenouscarbondioxidepartialpressure_mmhg(double value) {
  _internal_set_meanvenouscarbondioxidepartialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanVenousCarbonDioxidePartialPressure_mmHg)
}

// double MeanVenousOxygenPartialPressure_mmHg = 41;
inline void SimulationData::clear_meanvenousoxygenpartialpressure_mmhg() {
  meanvenousoxygenpartialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanvenousoxygenpartialpressure_mmhg() const {
  return meanvenousoxygenpartialpressure_mmhg_;
}
inline double SimulationData::meanvenousoxygenpartialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanVenousOxygenPartialPressure_mmHg)
  return _internal_meanvenousoxygenpartialpressure_mmhg();
}
inline void SimulationData::_internal_set_meanvenousoxygenpartialpressure_mmhg(double value) {
  
  meanvenousoxygenpartialpressure_mmhg_ = value;
}
inline void SimulationData::set_meanvenousoxygenpartialpressure_mmhg(double value) {
  _internal_set_meanvenousoxygenpartialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanVenousOxygenPartialPressure_mmHg)
}

// double BloodVolume_mL = 42;
inline void SimulationData::clear_bloodvolume_ml() {
  bloodvolume_ml_ = 0;
}
inline double SimulationData::_internal_bloodvolume_ml() const {
  return bloodvolume_ml_;
}
inline double SimulationData::bloodvolume_ml() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.BloodVolume_mL)
  return _internal_bloodvolume_ml();
}
inline void SimulationData::_internal_set_bloodvolume_ml(double value) {
  
  bloodvolume_ml_ = value;
}
inline void SimulationData::set_bloodvolume_ml(double value) {
  _internal_set_bloodvolume_ml(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.BloodVolume_mL)
}

// double CardiacOutput_mL_Per_min = 43;
inline void SimulationData::clear_cardiacoutput_ml_per_min() {
  cardiacoutput_ml_per_min_ = 0;
}
inline double SimulationData::_internal_cardiacoutput_ml_per_min() const {
  return cardiacoutput_ml_per_min_;
}
inline double SimulationData::cardiacoutput_ml_per_min() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.CardiacOutput_mL_Per_min)
  return _internal_cardiacoutput_ml_per_min();
}
inline void SimulationData::_internal_set_cardiacoutput_ml_per_min(double value) {
  
  cardiacoutput_ml_per_min_ = value;
}
inline void SimulationData::set_cardiacoutput_ml_per_min(double value) {
  _internal_set_cardiacoutput_ml_per_min(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.CardiacOutput_mL_Per_min)
}

// double DiastolicArterialPressure_mmHg = 44;
inline void SimulationData::clear_diastolicarterialpressure_mmhg() {
  diastolicarterialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_diastolicarterialpressure_mmhg() const {
  return diastolicarterialpressure_mmhg_;
}
inline double SimulationData::diastolicarterialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.DiastolicArterialPressure_mmHg)
  return _internal_diastolicarterialpressure_mmhg();
}
inline void SimulationData::_internal_set_diastolicarterialpressure_mmhg(double value) {
  
  diastolicarterialpressure_mmhg_ = value;
}
inline void SimulationData::set_diastolicarterialpressure_mmhg(double value) {
  _internal_set_diastolicarterialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.DiastolicArterialPressure_mmHg)
}

// double HeartEjectionFraction = 45;
inline void SimulationData::clear_heartejectionfraction() {
  heartejectionfraction_ = 0;
}
inline double SimulationData::_internal_heartejectionfraction() const {
  return heartejectionfraction_;
}
inline double SimulationData::heartejectionfraction() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.HeartEjectionFraction)
  return _internal_heartejectionfraction();
}
inline void SimulationData::_internal_set_heartejectionfraction(double value) {
  
  heartejectionfraction_ = value;
}
inline void SimulationData::set_heartejectionfraction(double value) {
  _internal_set_heartejectionfraction(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.HeartEjectionFraction)
}

// double HeartStrokeVolume_mL = 46;
inline void SimulationData::clear_heartstrokevolume_ml() {
  heartstrokevolume_ml_ = 0;
}
inline double SimulationData::_internal_heartstrokevolume_ml() const {
  return heartstrokevolume_ml_;
}
inline double SimulationData::heartstrokevolume_ml() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.HeartStrokeVolume_mL)
  return _internal_heartstrokevolume_ml();
}
inline void SimulationData::_internal_set_heartstrokevolume_ml(double value) {
  
  heartstrokevolume_ml_ = value;
}
inline void SimulationData::set_heartstrokevolume_ml(double value) {
  _internal_set_heartstrokevolume_ml(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.HeartStrokeVolume_mL)
}

// double MeanArterialCarbonDioxidePartialPressure_mmHg = 47;
inline void SimulationData::clear_meanarterialcarbondioxidepartialpressure_mmhg() {
  meanarterialcarbondioxidepartialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanarterialcarbondioxidepartialpressure_mmhg() const {
  return meanarterialcarbondioxidepartialpressure_mmhg_;
}
inline double SimulationData::meanarterialcarbondioxidepartialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanArterialCarbonDioxidePartialPressure_mmHg)
  return _internal_meanarterialcarbondioxidepartialpressure_mmhg();
}
inline void SimulationData::_internal_set_meanarterialcarbondioxidepartialpressure_mmhg(double value) {
  
  meanarterialcarbondioxidepartialpressure_mmhg_ = value;
}
inline void SimulationData::set_meanarterialcarbondioxidepartialpressure_mmhg(double value) {
  _internal_set_meanarterialcarbondioxidepartialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanArterialCarbonDioxidePartialPressure_mmHg)
}

// double MeanArterialPressure_mmHg = 48;
inline void SimulationData::clear_meanarterialpressure_mmhg() {
  meanarterialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meanarterialpressure_mmhg() const {
  return meanarterialpressure_mmhg_;
}
inline double SimulationData::meanarterialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanArterialPressure_mmHg)
  return _internal_meanarterialpressure_mmhg();
}
inline void SimulationData::_internal_set_meanarterialpressure_mmhg(double value) {
  
  meanarterialpressure_mmhg_ = value;
}
inline void SimulationData::set_meanarterialpressure_mmhg(double value) {
  _internal_set_meanarterialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanArterialPressure_mmHg)
}

// double MeanCentralVenousPressure_mmHg = 49;
inline void SimulationData::clear_meancentralvenouspressure_mmhg() {
  meancentralvenouspressure_mmhg_ = 0;
}
inline double SimulationData::_internal_meancentralvenouspressure_mmhg() const {
  return meancentralvenouspressure_mmhg_;
}
inline double SimulationData::meancentralvenouspressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.MeanCentralVenousPressure_mmHg)
  return _internal_meancentralvenouspressure_mmhg();
}
inline void SimulationData::_internal_set_meancentralvenouspressure_mmhg(double value) {
  
  meancentralvenouspressure_mmhg_ = value;
}
inline void SimulationData::set_meancentralvenouspressure_mmhg(double value) {
  _internal_set_meancentralvenouspressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.MeanCentralVenousPressure_mmHg)
}

// double PulmonaryDiastolicArterialPressure_mmHg = 50;
inline void SimulationData::clear_pulmonarydiastolicarterialpressure_mmhg() {
  pulmonarydiastolicarterialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_pulmonarydiastolicarterialpressure_mmhg() const {
  return pulmonarydiastolicarterialpressure_mmhg_;
}
inline double SimulationData::pulmonarydiastolicarterialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.PulmonaryDiastolicArterialPressure_mmHg)
  return _internal_pulmonarydiastolicarterialpressure_mmhg();
}
inline void SimulationData::_internal_set_pulmonarydiastolicarterialpressure_mmhg(double value) {
  
  pulmonarydiastolicarterialpressure_mmhg_ = value;
}
inline void SimulationData::set_pulmonarydiastolicarterialpressure_mmhg(double value) {
  _internal_set_pulmonarydiastolicarterialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.PulmonaryDiastolicArterialPressure_mmHg)
}

// double PulmonaryMeanArterialPressure_mmHg = 51;
inline void SimulationData::clear_pulmonarymeanarterialpressure_mmhg() {
  pulmonarymeanarterialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_pulmonarymeanarterialpressure_mmhg() const {
  return pulmonarymeanarterialpressure_mmhg_;
}
inline double SimulationData::pulmonarymeanarterialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.PulmonaryMeanArterialPressure_mmHg)
  return _internal_pulmonarymeanarterialpressure_mmhg();
}
inline void SimulationData::_internal_set_pulmonarymeanarterialpressure_mmhg(double value) {
  
  pulmonarymeanarterialpressure_mmhg_ = value;
}
inline void SimulationData::set_pulmonarymeanarterialpressure_mmhg(double value) {
  _internal_set_pulmonarymeanarterialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.PulmonaryMeanArterialPressure_mmHg)
}

// double PulmonaryMeanCapillaryFlow_mL_Per_s = 52;
inline void SimulationData::clear_pulmonarymeancapillaryflow_ml_per_s() {
  pulmonarymeancapillaryflow_ml_per_s_ = 0;
}
inline double SimulationData::_internal_pulmonarymeancapillaryflow_ml_per_s() const {
  return pulmonarymeancapillaryflow_ml_per_s_;
}
inline double SimulationData::pulmonarymeancapillaryflow_ml_per_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.PulmonaryMeanCapillaryFlow_mL_Per_s)
  return _internal_pulmonarymeancapillaryflow_ml_per_s();
}
inline void SimulationData::_internal_set_pulmonarymeancapillaryflow_ml_per_s(double value) {
  
  pulmonarymeancapillaryflow_ml_per_s_ = value;
}
inline void SimulationData::set_pulmonarymeancapillaryflow_ml_per_s(double value) {
  _internal_set_pulmonarymeancapillaryflow_ml_per_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.PulmonaryMeanCapillaryFlow_mL_Per_s)
}

// double PulmonarySystolicArterialPressure_mmHg = 53;
inline void SimulationData::clear_pulmonarysystolicarterialpressure_mmhg() {
  pulmonarysystolicarterialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_pulmonarysystolicarterialpressure_mmhg() const {
  return pulmonarysystolicarterialpressure_mmhg_;
}
inline double SimulationData::pulmonarysystolicarterialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.PulmonarySystolicArterialPressure_mmHg)
  return _internal_pulmonarysystolicarterialpressure_mmhg();
}
inline void SimulationData::_internal_set_pulmonarysystolicarterialpressure_mmhg(double value) {
  
  pulmonarysystolicarterialpressure_mmhg_ = value;
}
inline void SimulationData::set_pulmonarysystolicarterialpressure_mmhg(double value) {
  _internal_set_pulmonarysystolicarterialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.PulmonarySystolicArterialPressure_mmHg)
}

// double SystolicArterialPressure_mmHg = 54;
inline void SimulationData::clear_systolicarterialpressure_mmhg() {
  systolicarterialpressure_mmhg_ = 0;
}
inline double SimulationData::_internal_systolicarterialpressure_mmhg() const {
  return systolicarterialpressure_mmhg_;
}
inline double SimulationData::systolicarterialpressure_mmhg() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.SystolicArterialPressure_mmHg)
  return _internal_systolicarterialpressure_mmhg();
}
inline void SimulationData::_internal_set_systolicarterialpressure_mmhg(double value) {
  
  systolicarterialpressure_mmhg_ = value;
}
inline void SimulationData::set_systolicarterialpressure_mmhg(double value) {
  _internal_set_systolicarterialpressure_mmhg(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.SystolicArterialPressure_mmHg)
}

// double SystemicVascularResistance_mmHg_s_Per_L = 55;
inline void SimulationData::clear_systemicvascularresistance_mmhg_s_per_l() {
  systemicvascularresistance_mmhg_s_per_l_ = 0;
}
inline double SimulationData::_internal_systemicvascularresistance_mmhg_s_per_l() const {
  return systemicvascularresistance_mmhg_s_per_l_;
}
inline double SimulationData::systemicvascularresistance_mmhg_s_per_l() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.SystemicVascularResistance_mmHg_s_Per_L)
  return _internal_systemicvascularresistance_mmhg_s_per_l();
}
inline void SimulationData::_internal_set_systemicvascularresistance_mmhg_s_per_l(double value) {
  
  systemicvascularresistance_mmhg_s_per_l_ = value;
}
inline void SimulationData::set_systemicvascularresistance_mmhg_s_per_l(double value) {
  _internal_set_systemicvascularresistance_mmhg_s_per_l(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.SystemicVascularResistance_mmHg_s_Per_L)
}

// bool AchievedStabilization = 56;
inline void SimulationData::clear_achievedstabilization() {
  achievedstabilization_ = false;
}
inline bool SimulationData::_internal_achievedstabilization() const {
  return achievedstabilization_;
}
inline bool SimulationData::achievedstabilization() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.AchievedStabilization)
  return _internal_achievedstabilization();
}
inline void SimulationData::_internal_set_achievedstabilization(bool value) {
  
  achievedstabilization_ = value;
}
inline void SimulationData::set_achievedstabilization(bool value) {
  _internal_set_achievedstabilization(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.AchievedStabilization)
}

// double StabilizationTime_s = 57;
inline void SimulationData::clear_stabilizationtime_s() {
  stabilizationtime_s_ = 0;
}
inline double SimulationData::_internal_stabilizationtime_s() const {
  return stabilizationtime_s_;
}
inline double SimulationData::stabilizationtime_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.StabilizationTime_s)
  return _internal_stabilizationtime_s();
}
inline void SimulationData::_internal_set_stabilizationtime_s(double value) {
  
  stabilizationtime_s_ = value;
}
inline void SimulationData::set_stabilizationtime_s(double value) {
  _internal_set_stabilizationtime_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.StabilizationTime_s)
}

// double TotalSimulationTime_s = 58;
inline void SimulationData::clear_totalsimulationtime_s() {
  totalsimulationtime_s_ = 0;
}
inline double SimulationData::_internal_totalsimulationtime_s() const {
  return totalsimulationtime_s_;
}
inline double SimulationData::totalsimulationtime_s() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationData.TotalSimulationTime_s)
  return _internal_totalsimulationtime_s();
}
inline void SimulationData::_internal_set_totalsimulationtime_s(double value) {
  
  totalsimulationtime_s_ = value;
}
inline void SimulationData::set_totalsimulationtime_s(double value) {
  _internal_set_totalsimulationtime_s(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationData.TotalSimulationTime_s)
}

// -------------------------------------------------------------------

// SimulationListData

// string OutputRootDir = 1;
inline void SimulationListData::clear_outputrootdir() {
  outputrootdir_.ClearToEmpty();
}
inline const std::string& SimulationListData::outputrootdir() const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationListData.OutputRootDir)
  return _internal_outputrootdir();
}
inline void SimulationListData::set_outputrootdir(const std::string& value) {
  _internal_set_outputrootdir(value);
  // @@protoc_insertion_point(field_set:pulse.study.bind.sensitivity_analysis.SimulationListData.OutputRootDir)
}
inline std::string* SimulationListData::mutable_outputrootdir() {
  // @@protoc_insertion_point(field_mutable:pulse.study.bind.sensitivity_analysis.SimulationListData.OutputRootDir)
  return _internal_mutable_outputrootdir();
}
inline const std::string& SimulationListData::_internal_outputrootdir() const {
  return outputrootdir_.Get();
}
inline void SimulationListData::_internal_set_outputrootdir(const std::string& value) {
  
  outputrootdir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SimulationListData::set_outputrootdir(std::string&& value) {
  
  outputrootdir_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:pulse.study.bind.sensitivity_analysis.SimulationListData.OutputRootDir)
}
inline void SimulationListData::set_outputrootdir(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  outputrootdir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:pulse.study.bind.sensitivity_analysis.SimulationListData.OutputRootDir)
}
inline void SimulationListData::set_outputrootdir(const char* value,
    size_t size) {
  
  outputrootdir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:pulse.study.bind.sensitivity_analysis.SimulationListData.OutputRootDir)
}
inline std::string* SimulationListData::_internal_mutable_outputrootdir() {
  
  return outputrootdir_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SimulationListData::release_outputrootdir() {
  // @@protoc_insertion_point(field_release:pulse.study.bind.sensitivity_analysis.SimulationListData.OutputRootDir)
  return outputrootdir_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SimulationListData::set_allocated_outputrootdir(std::string* outputrootdir) {
  if (outputrootdir != nullptr) {
    
  } else {
    
  }
  outputrootdir_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), outputrootdir,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:pulse.study.bind.sensitivity_analysis.SimulationListData.OutputRootDir)
}

// repeated .pulse.study.bind.sensitivity_analysis.SimulationData Simulation = 2;
inline int SimulationListData::_internal_simulation_size() const {
  return simulation_.size();
}
inline int SimulationListData::simulation_size() const {
  return _internal_simulation_size();
}
inline void SimulationListData::clear_simulation() {
  simulation_.Clear();
}
inline ::pulse::study::bind::sensitivity_analysis::SimulationData* SimulationListData::mutable_simulation(int index) {
  // @@protoc_insertion_point(field_mutable:pulse.study.bind.sensitivity_analysis.SimulationListData.Simulation)
  return simulation_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pulse::study::bind::sensitivity_analysis::SimulationData >*
SimulationListData::mutable_simulation() {
  // @@protoc_insertion_point(field_mutable_list:pulse.study.bind.sensitivity_analysis.SimulationListData.Simulation)
  return &simulation_;
}
inline const ::pulse::study::bind::sensitivity_analysis::SimulationData& SimulationListData::_internal_simulation(int index) const {
  return simulation_.Get(index);
}
inline const ::pulse::study::bind::sensitivity_analysis::SimulationData& SimulationListData::simulation(int index) const {
  // @@protoc_insertion_point(field_get:pulse.study.bind.sensitivity_analysis.SimulationListData.Simulation)
  return _internal_simulation(index);
}
inline ::pulse::study::bind::sensitivity_analysis::SimulationData* SimulationListData::_internal_add_simulation() {
  return simulation_.Add();
}
inline ::pulse::study::bind::sensitivity_analysis::SimulationData* SimulationListData::add_simulation() {
  // @@protoc_insertion_point(field_add:pulse.study.bind.sensitivity_analysis.SimulationListData.Simulation)
  return _internal_add_simulation();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pulse::study::bind::sensitivity_analysis::SimulationData >&
SimulationListData::simulation() const {
  // @@protoc_insertion_point(field_list:pulse.study.bind.sensitivity_analysis.SimulationListData.Simulation)
  return simulation_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sensitivity_analysis
}  // namespace bind
}  // namespace study
}  // namespace pulse

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_pulse_2fstudy_2fbind_2fSensitivityAnalysis_2eproto
